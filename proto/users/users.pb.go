// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package users

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetByMailRequest struct {
	Mail                 string   `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByMailRequest) Reset()         { *m = GetByMailRequest{} }
func (m *GetByMailRequest) String() string { return proto.CompactTextString(m) }
func (*GetByMailRequest) ProtoMessage()    {}
func (*GetByMailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

func (m *GetByMailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByMailRequest.Unmarshal(m, b)
}
func (m *GetByMailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByMailRequest.Marshal(b, m, deterministic)
}
func (m *GetByMailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByMailRequest.Merge(m, src)
}
func (m *GetByMailRequest) XXX_Size() int {
	return xxx_messageInfo_GetByMailRequest.Size(m)
}
func (m *GetByMailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByMailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByMailRequest proto.InternalMessageInfo

func (m *GetByMailRequest) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

type GetByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{1}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mail                 string   `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName             string   `protobuf:"bytes,5,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Hierarchy            []string `protobuf:"bytes,6,rep,name=hierarchy,proto3" json:"hierarchy,omitempty"`
	HierarchyFlat        string   `protobuf:"bytes,7,opt,name=hierarchyFlat,proto3" json:"hierarchyFlat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetHierarchy() []string {
	if m != nil {
		return m.Hierarchy
	}
	return nil
}

func (m *User) GetHierarchyFlat() string {
	if m != nil {
		return m.HierarchyFlat
	}
	return ""
}

type GetUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{3}
}

func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (m *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(m, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type FindUserByNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserByNameRequest) Reset()         { *m = FindUserByNameRequest{} }
func (m *FindUserByNameRequest) String() string { return proto.CompactTextString(m) }
func (*FindUserByNameRequest) ProtoMessage()    {}
func (*FindUserByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{4}
}

func (m *FindUserByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserByNameRequest.Unmarshal(m, b)
}
func (m *FindUserByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserByNameRequest.Marshal(b, m, deterministic)
}
func (m *FindUserByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserByNameRequest.Merge(m, src)
}
func (m *FindUserByNameRequest) XXX_Size() int {
	return xxx_messageInfo_FindUserByNameRequest.Size(m)
}
func (m *FindUserByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserByNameRequest proto.InternalMessageInfo

func (m *FindUserByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FindUserByNameResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserByNameResponse) Reset()         { *m = FindUserByNameResponse{} }
func (m *FindUserByNameResponse) String() string { return proto.CompactTextString(m) }
func (*FindUserByNameResponse) ProtoMessage()    {}
func (*FindUserByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{5}
}

func (m *FindUserByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserByNameResponse.Unmarshal(m, b)
}
func (m *FindUserByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserByNameResponse.Marshal(b, m, deterministic)
}
func (m *FindUserByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserByNameResponse.Merge(m, src)
}
func (m *FindUserByNameResponse) XXX_Size() int {
	return xxx_messageInfo_FindUserByNameResponse.Size(m)
}
func (m *FindUserByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserByNameResponse proto.InternalMessageInfo

func (m *FindUserByNameResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*GetByMailRequest)(nil), "users.GetByMailRequest")
	proto.RegisterType((*GetByIDRequest)(nil), "users.GetByIDRequest")
	proto.RegisterType((*User)(nil), "users.User")
	proto.RegisterType((*GetUserResponse)(nil), "users.GetUserResponse")
	proto.RegisterType((*FindUserByNameRequest)(nil), "users.FindUserByNameRequest")
	proto.RegisterType((*FindUserByNameResponse)(nil), "users.FindUserByNameResponse")
}

func init() { proto.RegisterFile("users.proto", fileDescriptor_030765f334c86cea) }

var fileDescriptor_030765f334c86cea = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcd, 0x4a, 0x33, 0x31,
	0x14, 0x86, 0xbf, 0x69, 0xa7, 0xfd, 0xec, 0x19, 0x5a, 0xe5, 0x40, 0xeb, 0x50, 0x2a, 0x8e, 0x41,
	0x44, 0x10, 0xba, 0xa8, 0x4b, 0xc1, 0x45, 0x29, 0x2d, 0x5d, 0xa8, 0x50, 0xf0, 0x02, 0xa2, 0x4d,
	0x69, 0x20, 0xfd, 0x31, 0x49, 0x17, 0x73, 0x7f, 0x5e, 0x86, 0x17, 0x23, 0xc9, 0x64, 0x32, 0xd3,
	0x41, 0xdd, 0xe5, 0x9c, 0xe7, 0xcd, 0x9b, 0xf3, 0x13, 0x88, 0x0e, 0x8a, 0x49, 0x35, 0xdc, 0xcb,
	0x9d, 0xde, 0x61, 0xc3, 0x06, 0xe4, 0x06, 0xce, 0x66, 0x4c, 0x8f, 0xd3, 0x27, 0xca, 0xc5, 0x82,
	0x7d, 0x1c, 0x98, 0xd2, 0x88, 0x10, 0x6e, 0x28, 0x17, 0x71, 0x90, 0x04, 0xb7, 0xad, 0x85, 0x3d,
	0x93, 0x04, 0x3a, 0x56, 0x37, 0x9f, 0xe4, 0xaa, 0x0e, 0xd4, 0xf8, 0xd2, 0x69, 0x6a, 0x7c, 0x49,
	0x3e, 0x03, 0x08, 0x5f, 0x15, 0x93, 0x55, 0xe0, 0xed, 0x6a, 0x85, 0x1d, 0x0e, 0xa0, 0xb5, 0xe2,
	0x52, 0xe9, 0x67, 0xba, 0x61, 0x71, 0xdd, 0x82, 0x22, 0x81, 0x7d, 0x38, 0x11, 0xd4, 0xc1, 0xd0,
	0x42, 0x1f, 0x1b, 0xb6, 0x3a, 0x08, 0x61, 0x59, 0x23, 0x63, 0x79, 0x6c, 0x5c, 0xd7, 0x9c, 0x49,
	0x2a, 0xdf, 0xd7, 0x69, 0xdc, 0x4c, 0xea, 0xc6, 0xd5, 0x27, 0xf0, 0x1a, 0xda, 0x3e, 0x98, 0x0a,
	0xaa, 0xe3, 0xff, 0xf6, 0xfa, 0x71, 0x92, 0x8c, 0xe0, 0x74, 0xc6, 0xb4, 0x69, 0x64, 0xc1, 0xd4,
	0x7e, 0xb7, 0x55, 0x0c, 0x2f, 0x21, 0x34, 0xc3, 0xb2, 0x2d, 0x45, 0xa3, 0x68, 0x98, 0x8d, 0xd1,
	0x4a, 0x2c, 0x20, 0x77, 0xd0, 0x9d, 0xf2, 0xed, 0xd2, 0x64, 0xc6, 0xa9, 0xa9, 0xa4, 0x34, 0xc9,
	0xad, 0x29, 0xd4, 0x4d, 0xd2, 0x9c, 0xc9, 0x03, 0xf4, 0xaa, 0x62, 0xf7, 0xce, 0x15, 0x64, 0x4b,
	0x89, 0x83, 0xa4, 0x5e, 0x7d, 0x28, 0x23, 0xa3, 0xaf, 0x00, 0x1a, 0x26, 0x56, 0x38, 0x86, 0xb6,
	0xab, 0x33, 0x5b, 0x1e, 0x9e, 0x3b, 0x79, 0x75, 0x9d, 0xfd, 0x5e, 0x01, 0xca, 0x6d, 0x91, 0x7f,
	0xf8, 0x08, 0x91, 0xf7, 0x98, 0x4f, 0xb0, 0x5b, 0x76, 0xf0, 0x8b, 0xfe, 0xe3, 0xfe, 0x0b, 0x74,
	0x8e, 0x5b, 0xc1, 0x81, 0xd3, 0xfe, 0x38, 0x8e, 0xfe, 0xc5, 0x2f, 0x34, 0x37, 0x7c, 0x6b, 0xda,
	0xbf, 0x79, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x43, 0x1b, 0x55, 0xaa, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	GetUserByMail(ctx context.Context, in *GetByMailRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	GetUserByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	FindUserByName(ctx context.Context, in *FindUserByNameRequest, opts ...grpc.CallOption) (*FindUserByNameResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetUserByMail(ctx context.Context, in *GetByMailRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/users.Users/GetUserByMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetUserByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/users.Users/GetUserByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) FindUserByName(ctx context.Context, in *FindUserByNameRequest, opts ...grpc.CallOption) (*FindUserByNameResponse, error) {
	out := new(FindUserByNameResponse)
	err := c.cc.Invoke(ctx, "/users.Users/FindUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	GetUserByMail(context.Context, *GetByMailRequest) (*GetUserResponse, error)
	GetUserByID(context.Context, *GetByIDRequest) (*GetUserResponse, error)
	FindUserByName(context.Context, *FindUserByNameRequest) (*FindUserByNameResponse, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) GetUserByMail(ctx context.Context, req *GetByMailRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByMail not implemented")
}
func (*UnimplementedUsersServer) GetUserByID(ctx context.Context, req *GetByIDRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByID not implemented")
}
func (*UnimplementedUsersServer) FindUserByName(ctx context.Context, req *FindUserByNameRequest) (*FindUserByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUserByName not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetUserByMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUserByMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/GetUserByMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUserByMail(ctx, req.(*GetByMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/GetUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUserByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_FindUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUserByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).FindUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/FindUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).FindUserByName(ctx, req.(*FindUserByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserByMail",
			Handler:    _Users_GetUserByMail_Handler,
		},
		{
			MethodName: "GetUserByID",
			Handler:    _Users_GetUserByID_Handler,
		},
		{
			MethodName: "FindUserByName",
			Handler:    _Users_FindUserByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}
